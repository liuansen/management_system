# Generated by Django 2.2.5 on 2019-09-05 08:42

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='昵称长度4-20个字符，支持中英文、数字、-、_', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9-_一-龥]+$', '昵称长度4-20个字符，支持中英文、数字、-、_', 'invalid')], verbose_name='昵称')),
                ('email', models.EmailField(blank=True, default=None, max_length=254, null=True, unique=True, verbose_name='邮箱')),
                ('password', models.CharField(blank=True, max_length=128, null=True, verbose_name='密码')),
                ('is_password_set', models.BooleanField(default=True, verbose_name='是否设置密码')),
                ('is_username_set', models.BooleanField(default=True, verbose_name='是否设置昵称')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='注册时间')),
                ('is_staff', models.BooleanField(default=False, verbose_name='是否是职员')),
                ('mobile', models.CharField(default=None, max_length=100, null=True, unique=True, verbose_name='手机号')),
                ('province', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='省份')),
                ('city', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='城市')),
                ('district', models.CharField(blank=True, max_length=50, null=True, verbose_name='地区')),
                ('street', models.CharField(blank=True, max_length=100, null=True, verbose_name='详细地址')),
                ('gender', models.SmallIntegerField(blank=True, choices=[(0, '保密'), (1, '男'), (2, '女')], default=0, null=True, verbose_name='性别')),
                ('description', models.TextField(blank=True, null=True, verbose_name='简介')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('career', models.CharField(blank=True, choices=[('5', '房地产'), ('10', '国有企业'), ('2', '教科文'), ('3', '金融'), ('4', '商贸'), ('9', '事业单位'), ('1', '政府部门'), ('6', '制造业'), ('7', '自由职业'), ('8', '其他')], max_length=20, null=True, verbose_name='职业')),
                ('qq', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('we_chat', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='微信')),
                ('we_bo', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='微博')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('verified_status', models.SmallIntegerField(choices=[(-1, '未提交'), (0, '审核中'), (1, '已认证'), (2, '审核失败')], default=-1, verbose_name='认证状态')),
                ('verified_reason', models.CharField(blank=True, max_length=200, null=True, verbose_name='认证说明')),
                ('is_system', models.BooleanField(default=False, verbose_name='是否系统用户')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
