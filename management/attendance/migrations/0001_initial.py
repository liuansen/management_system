# Generated by Django 2.2.5 on 2019-09-05 08:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='部门名称')),
                ('parent_id', models.CharField(help_text='根部门id为1', max_length=20, verbose_name='父部门id')),
                ('order', models.CharField(blank=True, help_text='order值小的排序靠前', max_length=20, null=True, verbose_name='在父部门中的排序值')),
                ('create_dept_group', models.BooleanField(default=False, verbose_name='是否创建一个关联此部门的企业群')),
                ('dept_hiding', models.BooleanField(default=False, verbose_name='是否隐藏部门')),
                ('dept_permits', models.CharField(blank=True, help_text='如果部门隐藏，则此值生效，取值为其他的部门id组成的字符串，使用“\\|”符号进行分割。总数不能超过200', max_length=20, null=True, verbose_name='可以查看指定隐藏部门的其他部门列表')),
                ('user_permits', models.CharField(blank=True, help_text='如果部门隐藏，则此值生效，取值为其他的人员userid组成的的字符串，使用“\\|”符号进行分割。总数不能超过200', max_length=20, null=True, verbose_name='可以查看指定隐藏部门的其他人员列表')),
                ('outer_dept', models.BooleanField(default=True, help_text='限制开启后，本部门成员只能看到限定范围内的通讯录。true表示限制开启', verbose_name='限制本部门成员查看通讯录')),
                ('outer_permit_depts', models.CharField(blank=True, help_text='outerDept为true时，可以配置额外可见部门，值为部门id组成的的字符串，使用“\\|”符号进行分割。总数不能超过200', max_length=20, null=True, verbose_name='outerDept为true时，可以配置额外可见部门')),
                ('outer_permit_users', models.CharField(blank=True, help_text='outerDept为true时，可以配置额外可见人员，值为userid组成的的字符串，使用“\\|”符号进行分割。总数不能超过200', max_length=20, null=True, verbose_name='outerDept为true时，可以配置额外可见人员')),
                ('outer_dept_only_self', models.BooleanField(default=False, help_text='outerDept为true时，可以配置该字段，为true时，表示只能看到所在部门及下级部门通讯录', verbose_name='表示只能看到所在部门及下级部门通讯录')),
                ('source_identifier', models.CharField(blank=True, help_text='开发者可用该字段来唯一标识一个部门，并与钉钉外部通讯录里的部门做映射', max_length=20, null=True, verbose_name='部门标识字段')),
            ],
            options={
                'verbose_name': '部门表（钉钉）',
                'verbose_name_plural': '部门表（钉钉）',
            },
        ),
        migrations.CreateModel(
            name='DingTalkUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(blank=True, help_text='员工在当前企业内的唯一标识，也称staffId。可由企业在创建时指定，并代表一定含义比如工号，创建后不可修改 ', max_length=200, null=True, verbose_name='工号, 员工在当前企业内的唯一标识')),
                ('union_id', models.CharField(blank=True, help_text='员工在当前开发者企业账号范围内的唯一标识，系统生成，固定值，不会改变', max_length=200, null=True, verbose_name='钉钉唯一标识')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='员工名字')),
                ('tel', models.CharField(blank=True, max_length=20, null=True, verbose_name='分机号')),
                ('work_place', models.CharField(blank=True, max_length=100, null=True, verbose_name='办公地点')),
                ('remark', models.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
                ('mobile', models.CharField(blank=True, max_length=100, null=True, verbose_name='手机号')),
                ('email', models.CharField(blank=True, max_length=100, null=True, verbose_name='邮箱')),
                ('org_email', models.CharField(blank=True, help_text='员工的企业邮箱，如果员工已经开通了企业邮箱，接口会返回，否则不会返回', max_length=100, null=True, verbose_name='员工的企业邮箱')),
                ('active', models.BooleanField(default=False, verbose_name='是否已经激活')),
                ('order_in_depts', models.CharField(blank=True, help_text='在对应的部门中的排序，Map结构的json字符串，key是部门的Id，value是人员在这个部门的排序值', max_length=20, null=True, verbose_name='在对应的部门中的排序')),
                ('is_admin', models.BooleanField(default=False, verbose_name='是否为企业的管理员')),
                ('is_boss', models.BooleanField(default=False, verbose_name='是否为企业的老板')),
                ('is_leader_in_depts', models.CharField(blank=True, help_text='在对应的部门中是否为主管：Map结构的json字符串，key是部门的Id，value是人员在这个部门中是否为主管，true表示是，false表示不是', max_length=20, null=True, verbose_name='在对应的部门中是否为主管')),
                ('is_hide', models.BooleanField(default=False, verbose_name='是否号码隐藏')),
                ('position', models.CharField(blank=True, max_length=200, null=True, verbose_name='职位信息')),
                ('avatar', models.CharField(blank=True, max_length=500, null=True, verbose_name='头像url')),
                ('hired_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='入职时间')),
                ('jobnumber', models.CharField(blank=True, max_length=100, null=True, verbose_name='员工工号')),
                ('extattr', models.CharField(blank=True, help_text='扩展属性，可以设置多种属性（但手机上最多只能显示10个扩展属性，具体显示哪些属性，请到OA管理后台->设置->通讯录信息设置和OA管理后台->设置->手机端显示信息设置）', max_length=20, null=True, verbose_name='扩展属性')),
                ('is_senior', models.BooleanField(default=False, verbose_name='是否是高管')),
                ('state_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='国家地区码')),
                ('department', models.ManyToManyField(to='attendance.Department', verbose_name='成员所属部门id列表')),
            ],
            options={
                'verbose_name': '员工表（钉钉）',
                'verbose_name_plural': '员工表（钉钉）',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=200, verbose_name='角色名称 ')),
            ],
            options={
                'verbose_name': '角色表（钉钉）',
                'verbose_name_plural': '角色表（钉钉）',
            },
        ),
        migrations.CreateModel(
            name='RoleGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='角色组名称')),
            ],
            options={
                'verbose_name': '角色组（钉钉）',
                'verbose_name_plural': '角色组（钉钉）',
            },
        ),
        migrations.CreateModel(
            name='RoleSimpleList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ding_talk_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendance.DingTalkUser', verbose_name='钉钉用户')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendance.Role', verbose_name='角色')),
            ],
            options={
                'verbose_name': '用户角色表（钉钉）',
                'verbose_name_plural': '用户角色表（钉钉）',
            },
        ),
        migrations.AddField(
            model_name='role',
            name='group_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendance.RoleGroup', verbose_name='角色组id '),
        ),
        migrations.AddField(
            model_name='dingtalkuser',
            name='roles',
            field=models.ManyToManyField(to='attendance.Role', verbose_name='用户所在角色列表'),
        ),
        migrations.CreateModel(
            name='DDAccessToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=200, null=True, verbose_name='账号(选填)')),
                ('password', models.CharField(blank=True, max_length=200, null=True, verbose_name='密码(选填)')),
                ('category', models.SmallIntegerField(choices=[(0, '钉钉'), (1, '其他')], default=0, verbose_name='类别')),
                ('appkey', models.CharField(blank=True, max_length=200, null=True, verbose_name='appkey')),
                ('appsecret', models.CharField(blank=True, max_length=200, null=True, verbose_name='appsecret')),
                ('access_token', models.CharField(blank=True, max_length=200, null=True, verbose_name='access_token')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_token_user', to=settings.AUTH_USER_MODEL, verbose_name='管理员用户')),
            ],
            options={
                'verbose_name': 'token表',
                'verbose_name_plural': 'token表',
            },
        ),
    ]
